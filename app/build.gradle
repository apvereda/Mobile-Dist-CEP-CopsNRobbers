apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.apvereda.digitalavatars"
        manifestPlaceholders = [
                onesignal_app_id               : 'XXX',
                // Project number pulled from dashboard, local value is ignored.
                onesignal_google_project_number: 'REMOTE'
        ]
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/DEPENDENCIES'
        merge 'META-INF/annotations/org.wso2.siddhi.annotation.Extension'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.0.0'
    implementation 'androidx.navigation:navigation-ui:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'org.altbeacon:android-beacon-library:2.+'
    implementation 'com.google.android.gms:play-services-awareness:19.0.1'
    implementation('org.wso2.siddhi:siddhi-core:4.0.0-M86') {
        transitive = false
    }
    annotationProcessor('org.wso2.siddhi:siddhi-annotations:4.0.0-M86') {
        transitive = false
    }
    implementation('org.wso2.siddhi:siddhi-annotations:4.0.0-M86') {
        transitive = false
    }
    implementation('org.wso2.siddhi:siddhi-query-api:4.0.0-M86') {
        transitive = false
    }
    implementation('org.wso2.siddhi:siddhi-query-compiler:4.0.0-M86') {
        transitive = false
    }
    implementation('org.wso2.extension.siddhi.map.text:siddhi-map-text:1.0.2') {
        transitive = false
    }
    implementation('org.wso2.extension.siddhi.map.keyvalue:siddhi-map-keyvalue:1.0.1') {
        transitive = false
    }
    implementation "com.google.guava:guava:19.0"
    implementation("org.apache.log4j.wso2:log4j:1.2.17.wso2v1") {
        transitive = false
    }
    implementation "org.osgi:org.osgi.core:6.0.0"
    implementation "org.wso2.orbit.com.lmax:disruptor:3.3.2.wso2v2"
    implementation "org.antlr:antlr4-runtime:4.5.1"
    implementation 'com.couchbase.lite:couchbase-lite-android:2.7.0'
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.onesignal:OneSignal:[3.11.2, 3.99.99]'
    implementation "com.google.firebase:firebase-auth:17.0.0"
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'
    implementation files('libs/androjena_0.5.jar')
    implementation files('libs/androjena_0.5_sources.jar')
    implementation files('libs/icu4j-3.4.5.jar')
    implementation files('libs/iri-0.8.jar')
    implementation files('libs/slf4j-android-1.6.1-RC1.jar')
}
/*
apply plugin: 'maven'


uploadArchives {
    repositories.mavenDeployer {
        repository(url: System.getenv("DEPLOY_URL")) {
            authentication(userName: System.getenv("USER_NAME"), password: System.getenv("PASSWORD"))
            pom.groupId = "org.wso2.siddhi.android.platform"
            pom.artifactId = "siddhi-android-platform"
            pom.version = '1.0.0'
        }
        repository(url: System.getenv("DEPLOY_URL")) {
            authentication(userName: System.getenv("USER_NAME"), password: System.getenv("PASSWORD"))
            pom.groupId = "org.wso2.extension.siddhi.io.http"
            pom.artifactId = "siddhi-io-http"
            pom.version = '1.0.4'
        }
    }
}
*/
task clearJar(type: Delete) {
    delete 'build/outputs/aar/siddhi-service/'
}

task makeJar(type: Copy) {
    from zipTree('build/outputs/aar/siddhi-io-android-debug.aar')
    into("build/outputs/aar/siddhi-service")
    include "classes.jar"
    rename("classes.jar", "siddhi-service.jar")
}

makeJar.dependsOn(clearJar)
